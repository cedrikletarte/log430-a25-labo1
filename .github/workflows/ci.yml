name: example_CI

on: [push, pull_request]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout dépôt
        uses: actions/checkout@v3

      - name: Créer fichier .env (Docker)
        run: |
          echo "MYSQL_HOST=mysql" >> .env
          echo "MONGODB_HOST=mongo" >> .env
          echo "MYSQL_DB_NAME=mydb" >> .env
          echo "DB_USERNAME=user" >> .env
          echo "DB_PASSWORD=pass" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=user" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=pass" >> .env

      - name: Lancer les services Docker
        run: docker compose up -d --build

      - name: Attendre que MySQL et Mongo soient prêts
        run: |
          for i in {1..30}; do
            if docker exec $(docker ps -qf "name=mongo") mongosh -u user -p pass --eval "db.adminCommand('ping')" &>/dev/null; then
              echo "MongoDB est prêt"
              break
            fi
            echo "En attente de MongoDB..."
            sleep 2
          done

          for i in {1..30}; do
            if docker exec $(docker ps -qf "name=mysql") mysql -uuser -ppass -e "SELECT 1;" &>/dev/null; then
              echo "MySQL est prêt"
              break
            fi
            echo "En attente de MySQL..."
            sleep 2
          done

      - name: Créer fichier .env (local)
        run: |
          echo "MYSQL_HOST=localhost" >> .env
          echo "MONGODB_HOST=localhost" >> .env
          echo "MYSQL_DB_NAME=mydb" >> .env
          echo "DB_USERNAME=user" >> .env
          echo "DB_PASSWORD=pass" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=user" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=pass" >> .env

      - name: Créer un environnement virtuel Python
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lancer les tests Pytest
        run: |
          source venv/bin/activate
          export PYTHONPATH=${PWD}/src
          pytest -v
